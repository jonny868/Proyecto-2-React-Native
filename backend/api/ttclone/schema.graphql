# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type User @model {
  id: ID!
  username: String!
  email: String!
  name: String!
  image: String
  tweets: [Tweet] @hasMany(indexName: "byUser", fields: ["id"])
}

type Tweet @model {
  id: ID! @primaryKey
  content: String!
  userID: ID! @index(name: "byUser", sortKeyFields: ["id"])
  image: String
  user: User @hasOne(fields: ["userID"])
  likes: [Like] @hasMany(indexName: "byTweet", fields: ["id"])
}

type Like @model(queries: null) {
  id: ID! @primaryKey
  userID: ID! @index(name: "byTweet", sortKeyFields: ["tweetID"])
  tweetID: ID! @index(name: "byUser", sortKeyFields: ["userID"])
  user: [User!] @hasMany(fields: ["userID"])
  tweet: [Tweet!]@hasMany(fields: ["tweetID"])
}


# input AMPLIFY {
#   globalAuthRule: AuthRule = { allow: public }
# } # FOR TESTING ONLY!
# type User @model {
#   id: ID!
#   username: String!
#   email: String!
#   name: String!
#   image: String
#   tweets: [Tweet] @hasMany(indexName: "byUser", fields: ["id"])
# }

# type Tweet @model {
#   id: ID! @primaryKey
#   content: String!
#   userID: ID! @index(name: "byUser", sortKeyFields: ["id"])
#   image: String
#   user: User @hasOne(fields: ["userID"])
#   likes: [Like] @hasMany(indexName: "byTweet", fields: ["id"])
# }

# type Like @model(queries: null) {
#   id: ID! @primaryKey
#   userID: ID! @index(name: "byTweet", sortKeyFields: ["tweetID"])
#   tweetID: ID! @index(name: "byUser", sortKeyFields: ["userID"])
#   user: [User!] @hasMany(fields: ["userID"])
#   tweet: [Tweet!] @hasMany(fields: ["tweetID"])
# }
